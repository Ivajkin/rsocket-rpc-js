// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proteus/core.proto

#include "core.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proteus_2fcore_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proteus_2fcore_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProteusOptions;
}  // namespace protobuf_proteus_2fcore_2eproto
namespace io {
namespace netifi {
namespace proteus {
class ProteusOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProteusOptions>
      _instance;
} _ProteusOptions_default_instance_;
}  // namespace proteus
}  // namespace netifi
}  // namespace io
namespace protobuf_proteus_2fcore_2eproto {
static void InitDefaultsProteusOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::io::netifi::proteus::_ProteusOptions_default_instance_;
    new (ptr) ::io::netifi::proteus::ProteusOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::io::netifi::proteus::ProteusOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProteusOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProteusOptions}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProteusOptions.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::io::netifi::proteus::ProteusOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::io::netifi::proteus::ProteusOptions, fire_and_forget_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::io::netifi::proteus::ProteusOptions)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::io::netifi::proteus::_ProteusOptions_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proteus/core.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022proteus/core.proto\022\021io.netifi.proteus\032"
      " google/protobuf/descriptor.proto\")\n\016Pro"
      "teusOptions\022\027\n\017fire_and_forget\030\001 \001(\010:S\n\007"
      "options\022\036.google.protobuf.MethodOptions\030"
      "\241\010 \001(\0132!.io.netifi.proteus.ProteusOption"
      "sB \n\021io.netifi.proteusB\tCoreProtoP\001b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proteus/core.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proteus_2fcore_2eproto
namespace io {
namespace netifi {
namespace proteus {

// ===================================================================

void ProteusOptions::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProteusOptions::kFireAndForgetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProteusOptions::ProteusOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proteus_2fcore_2eproto::scc_info_ProteusOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:io.netifi.proteus.ProteusOptions)
}
ProteusOptions::ProteusOptions(const ProteusOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fire_and_forget_ = from.fire_and_forget_;
  // @@protoc_insertion_point(copy_constructor:io.netifi.proteus.ProteusOptions)
}

void ProteusOptions::SharedCtor() {
  fire_and_forget_ = false;
}

ProteusOptions::~ProteusOptions() {
  // @@protoc_insertion_point(destructor:io.netifi.proteus.ProteusOptions)
  SharedDtor();
}

void ProteusOptions::SharedDtor() {
}

void ProteusOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProteusOptions::descriptor() {
  ::protobuf_proteus_2fcore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proteus_2fcore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProteusOptions& ProteusOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proteus_2fcore_2eproto::scc_info_ProteusOptions.base);
  return *internal_default_instance();
}


void ProteusOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:io.netifi.proteus.ProteusOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fire_and_forget_ = false;
  _internal_metadata_.Clear();
}

bool ProteusOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:io.netifi.proteus.ProteusOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool fire_and_forget = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fire_and_forget_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:io.netifi.proteus.ProteusOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:io.netifi.proteus.ProteusOptions)
  return false;
#undef DO_
}

void ProteusOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:io.netifi.proteus.ProteusOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fire_and_forget = 1;
  if (this->fire_and_forget() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->fire_and_forget(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:io.netifi.proteus.ProteusOptions)
}

::google::protobuf::uint8* ProteusOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:io.netifi.proteus.ProteusOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fire_and_forget = 1;
  if (this->fire_and_forget() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->fire_and_forget(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:io.netifi.proteus.ProteusOptions)
  return target;
}

size_t ProteusOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:io.netifi.proteus.ProteusOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool fire_and_forget = 1;
  if (this->fire_and_forget() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProteusOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:io.netifi.proteus.ProteusOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const ProteusOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProteusOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:io.netifi.proteus.ProteusOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:io.netifi.proteus.ProteusOptions)
    MergeFrom(*source);
  }
}

void ProteusOptions::MergeFrom(const ProteusOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:io.netifi.proteus.ProteusOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fire_and_forget() != 0) {
    set_fire_and_forget(from.fire_and_forget());
  }
}

void ProteusOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:io.netifi.proteus.ProteusOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProteusOptions::CopyFrom(const ProteusOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:io.netifi.proteus.ProteusOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProteusOptions::IsInitialized() const {
  return true;
}

void ProteusOptions::Swap(ProteusOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProteusOptions::InternalSwap(ProteusOptions* other) {
  using std::swap;
  swap(fire_and_forget_, other->fire_and_forget_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProteusOptions::GetMetadata() const {
  protobuf_proteus_2fcore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proteus_2fcore_2eproto::file_level_metadata[kIndexInFileMessages];
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MethodOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::io::netifi::proteus::ProteusOptions >, 11, false >
  options(kOptionsFieldNumber, *::io::netifi::proteus::ProteusOptions::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace proteus
}  // namespace netifi
}  // namespace io
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::io::netifi::proteus::ProteusOptions* Arena::CreateMaybeMessage< ::io::netifi::proteus::ProteusOptions >(Arena* arena) {
  return Arena::CreateInternal< ::io::netifi::proteus::ProteusOptions >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
